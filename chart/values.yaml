#
## Default values for minio instance creation.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.
## Configure number of MinIO Operator Deployment Replicas
#replicas:
#  count: 1

hostname: bigbang.dev
#nameOverride: ""
#fullnameOverride: ""

# Configure repo and tag of MinIO Operator Image
#image:
#  name: registry1.dso.mil/ironbank/opensource/minio/minio
#  tag: RELEASE.2020-11-19T23-48-16Z
#  imagePullPolicy: IfNotPresent

#zones:
  # refer to documentation for number of servers versus volumes per server
  #  https://docs.min.io/docs/minio-server-limits-per-tenant.html
#  servers: 3       # scale to 3 for dev
#volumesPerServer: 2  # 2 is minimum volumes with 3 servers

#volumeClaimTemplate:
#  accessModes: ReadWriteOnce
#  storage: 1Gi  # scale down for dev

imagePullSecrets:
  - name: private-registry

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  # Internal service name for minio instance.  This is the full name of the service used to connect to Minio from within the cluster.
  # If not specified, the service name will be the default full name of the minio instance.
  nameOverride: ""
  type: ClusterIP
  port: 9000

podAnnotations: {}

istio:
  enabled: false
  virtualService:
    enabled: true
    annotations: {}
    labels: {}
    gateways:
      - istio-system/main
    hosts:
      -  minio.{{ .Values.hostname }}
    service: ""
    port: ""


monitoring:
  enabled: false
  namespace: monitoring

networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway

## MinIO Tenant Definition
tenants:
  # Tenant name
  name: minio
    ## Registry location and Tag to download MinIO Server image
# Configure repo and tag of MinIO Operator Image
  image:
    repository: registry1.dso.mil/ironbank/opensource/minio/minio
    tag: RELEASE.2020-11-19T23-48-16Z
    pullPolicy: "IfNotPresent"
  imagePullSecret:
    name: private-registry
    ## If a scheduler is specified here, Tenant pods will be dispatched by specified scheduler.
    ## If not specified, the Tenant pods will be dispatched by default scheduler.
    ##scheduler:
    ##  name:
  scheduler: {}

    ## Used to specify a toleration for a pod
  tolerations: {}
      ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
    ## eligible to run on a node, the node must have each of the
    ## indicated key-value pairs as labels.
    ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  nodeSelector: {}
    ## Affinity settings for MinIO pods. Read more about affinity
    ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
  affinity: {}
    ## Configure resource requests and limits for MinIO containers
  resources: {}
    ## Configure security context
    ## BB Note: Defaults for Ironbank image are 1001 for user, group, and fsGroup
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  secrets:
    name: minio-creds-secret
    accessKey: ThisIsAVeryLongPasswordForExample
    secretKey: ThisIsAVeryLongPasswordForExample
  metrics:
    enabled: false
    port: 9000
    ## Specification for MinIO Pool(s) in this Tenant.
  pools:
      ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
      ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
      ## Note that the operator does not support upgrading from standalone to distributed mode.
    - servers: 4
        ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: 4
        ## size specifies the capacity per volume
      size: 1Gi
        ## storageClass specifies the storage class name to be used for this pool
      storageClassName: standard
        ## Used to specify a toleration for a pod
      tolerations: {}
          ## nodeSelector parameters for MinIO Pods. It specifies a map of key-value pairs. For the pod to be
        ## eligible to run on a node, the node must have each of the
        ## indicated key-value pairs as labels.
        ## Read more here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
      nodeSelector: {}
        ## Affinity settings for MinIO pods. Read more about affinity
        ## here: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity.
      affinity: {}
        ## Configure resource requests and limits for MinIO containers
      resources: {}
        ## Configure security context
        ## BB Note: Defaults for Ironbank image are 1001 for user, group, and fsGroup
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
    ## Mount path where PV will be mounted inside container(s).
  mountPath: /export
    ## Sub path inside Mount path where MinIO stores data.
  subPath: /data
  certificate:
      ## Use this field to provide a list of Secrets with external certificates. This can be used to to configure
      ## TLS for MinIO Tenant pods. Create secrets as explained here:
      ## https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
    externalCertSecret: {}
      ## Enable automatic Kubernetes based certificate generation and signing as explained in
      ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
      ## false = disabled TLS endpoints at the tenants
    requestAutoCert: false
      ## This field is used only when "requestAutoCert" is set to true. Use this field to set CommonName
      ## for the auto-generated certificate. Internal DNS name for the pod will be used if CommonName is
      ## not provided. DNS name format is *.minio.default.svc.cluster.local
      ##certConfig:
      ## commonName: ""
      ##  organizationName: []
      ##  dnsNames: []
    certConfig: {}
    ## Enable S3 specific features such as Bucket DNS which would allow `buckets` to be
    ## accessible as DNS entries of form `<bucketname>.minio.default.svc.cluster.local`
  s3:
      ## This feature is turned off by default
    bucketDNS: false
    ## PodManagement policy for MinIO Tenant Pods. Can be "OrderedReady" or "Parallel"
    ## Refer https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy
    ## for details.
  podManagementPolicy: Parallel
    ## serviceMetadata allows passing additional labels and annotations to MinIO and Console specific
    ## services created by the operator.
    ##serviceMetadata: {}
  serviceMetadata:
    minioServiceLabels:
      label: minio-svc
    minioServiceAnnotations:
      v2.min.io: minio-svc
    # consoleServiceLabels:
    #   label: console-svc
    # consoleServiceAnnotations:
    #   v2.min.io: console-svc

    ## Add environment variables to be set in MinIO container (https://github.com/minio/minio/tree/master/docs/config)
  env: {}
    ## PriorityClassName indicates the Pod priority and hence importance of a Pod relative to other Pods.
    ## This is applied to MinIO pods only.
    ## Refer Kubernetes documentation for details https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass/
    # e.g., priorityClassName: high-priority
  priorityClassName : ""
    ## Define configuration for Console (Graphical user interface for MinIO)
    ## Refer https://github.com/minio/console
  console:
    enabled: false
    image:
      repository: minio/console
      tag: v0.6.3
      pullPolicy: IfNotPresent
    replicaCount: 1
    secrets:
      name: minio-console-secret
      passphrase: ThisIsAVeryLongConsolePasswordForExample
      salt: ThisIsAVeryLongConsolePasswordForExample
      accessKey: ThisIsAVeryLongConsolePasswordForExample
      secretKey: ThisIsAVeryLongConsolePasswordForExample
